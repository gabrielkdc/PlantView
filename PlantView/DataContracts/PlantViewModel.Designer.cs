//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace DataContracts
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PlantViewEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PlantViewEntities object using the connection string found in the 'PlantViewEntities' section of the application configuration file.
        /// </summary>
        public PlantViewEntities() : base("name=PlantViewEntities", "PlantViewEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PlantViewEntities object.
        /// </summary>
        public PlantViewEntities(string connectionString) : base(connectionString, "PlantViewEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PlantViewEntities object.
        /// </summary>
        public PlantViewEntities(EntityConnection connection) : base(connection, "PlantViewEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Plant> Plants
        {
            get
            {
                if ((_Plants == null))
                {
                    _Plants = base.CreateObjectSet<Plant>("Plants");
                }
                return _Plants;
            }
        }
        private ObjectSet<Plant> _Plants;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Scale> Scales
        {
            get
            {
                if ((_Scales == null))
                {
                    _Scales = base.CreateObjectSet<Scale>("Scales");
                }
                return _Scales;
            }
        }
        private ObjectSet<Scale> _Scales;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WeighingRecord> WeighingRecords
        {
            get
            {
                if ((_WeighingRecords == null))
                {
                    _WeighingRecords = base.CreateObjectSet<WeighingRecord>("WeighingRecords");
                }
                return _WeighingRecords;
            }
        }
        private ObjectSet<WeighingRecord> _WeighingRecords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImportedFile> ImportedFiles
        {
            get
            {
                if ((_ImportedFiles == null))
                {
                    _ImportedFiles = base.CreateObjectSet<ImportedFile>("ImportedFiles");
                }
                return _ImportedFiles;
            }
        }
        private ObjectSet<ImportedFile> _ImportedFiles;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Plants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlants(Plant plant)
        {
            base.AddObject("Plants", plant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Scales EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScales(Scale scale)
        {
            base.AddObject("Scales", scale);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WeighingRecords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWeighingRecords(WeighingRecord weighingRecord)
        {
            base.AddObject("WeighingRecords", weighingRecord);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImportedFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImportedFiles(ImportedFile importedFile)
        {
            base.AddObject("ImportedFiles", importedFile);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PlantViewModel", Name="ImportedFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImportedFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImportedFile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="filename">Initial value of the Filename property.</param>
        public static ImportedFile CreateImportedFile(global::System.Int32 id, global::System.String filename)
        {
            ImportedFile importedFile = new ImportedFile();
            importedFile.Id = id;
            importedFile.Filename = filename;
            return importedFile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Filename
        {
            get
            {
                return _Filename;
            }
            set
            {
                OnFilenameChanging(value);
                ReportPropertyChanging("Filename");
                _Filename = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Filename");
                OnFilenameChanged();
            }
        }
        private global::System.String _Filename;
        partial void OnFilenameChanging(global::System.String value);
        partial void OnFilenameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PlantViewModel", Name="Plant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Plant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Plant object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="plantName">Initial value of the PlantName property.</param>
        /// <param name="plantNumber">Initial value of the PlantNumber property.</param>
        public static Plant CreatePlant(global::System.Int32 id, global::System.Int32 plantName, global::System.Int32 plantNumber)
        {
            Plant plant = new Plant();
            plant.Id = id;
            plant.PlantName = plantName;
            plant.PlantNumber = plantNumber;
            return plant;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlantName
        {
            get
            {
                return _PlantName;
            }
            set
            {
                OnPlantNameChanging(value);
                ReportPropertyChanging("PlantName");
                _PlantName = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlantName");
                OnPlantNameChanged();
            }
        }
        private global::System.Int32 _PlantName;
        partial void OnPlantNameChanging(global::System.Int32 value);
        partial void OnPlantNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlantNumber
        {
            get
            {
                return _PlantNumber;
            }
            set
            {
                OnPlantNumberChanging(value);
                ReportPropertyChanging("PlantNumber");
                _PlantNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlantNumber");
                OnPlantNumberChanged();
            }
        }
        private global::System.Int32 _PlantNumber;
        partial void OnPlantNumberChanging(global::System.Int32 value);
        partial void OnPlantNumberChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PlantViewModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="productNumber">Initial value of the ProductNumber property.</param>
        /// <param name="productName">Initial value of the ProductName property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="level">Initial value of the Level property.</param>
        public static Product CreateProduct(global::System.Int32 id, global::System.Int32 productNumber, global::System.String productName, global::System.Int32 type, global::System.Int32 level)
        {
            Product product = new Product();
            product.Id = id;
            product.ProductNumber = productNumber;
            product.ProductName = productName;
            product.Type = type;
            product.Level = level;
            return product;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductNumber
        {
            get
            {
                return _ProductNumber;
            }
            set
            {
                OnProductNumberChanging(value);
                ReportPropertyChanging("ProductNumber");
                _ProductNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductNumber");
                OnProductNumberChanged();
            }
        }
        private global::System.Int32 _ProductNumber;
        partial void OnProductNumberChanging(global::System.Int32 value);
        partial void OnProductNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.Int32 _Level;
        partial void OnLevelChanging(global::System.Int32 value);
        partial void OnLevelChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PlantViewModel", Name="Scale")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Scale : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Scale object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="scaleName">Initial value of the ScaleName property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="level">Initial value of the Level property.</param>
        public static Scale CreateScale(global::System.Int32 id, global::System.String scaleName, global::System.Int16 type, global::System.Int32 level)
        {
            Scale scale = new Scale();
            scale.Id = id;
            scale.ScaleName = scaleName;
            scale.Type = type;
            scale.Level = level;
            return scale;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScaleName
        {
            get
            {
                return _ScaleName;
            }
            set
            {
                OnScaleNameChanging(value);
                ReportPropertyChanging("ScaleName");
                _ScaleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ScaleName");
                OnScaleNameChanged();
            }
        }
        private global::System.String _ScaleName;
        partial void OnScaleNameChanging(global::System.String value);
        partial void OnScaleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int16 _Type;
        partial void OnTypeChanging(global::System.Int16 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.Int32 _Level;
        partial void OnLevelChanging(global::System.Int32 value);
        partial void OnLevelChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PlantViewModel", Name="WeighingRecord")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WeighingRecord : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WeighingRecord object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="weight">Initial value of the Weight property.</param>
        /// <param name="tonsPerHour">Initial value of the TonsPerHour property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="plantId">Initial value of the PlantId property.</param>
        /// <param name="fileId">Initial value of the FileId property.</param>
        public static WeighingRecord CreateWeighingRecord(global::System.Int32 id, global::System.DateTime date, global::System.Decimal weight, global::System.Decimal tonsPerHour, global::System.Int32 productId, global::System.Int32 plantId, global::System.Int32 fileId)
        {
            WeighingRecord weighingRecord = new WeighingRecord();
            weighingRecord.Id = id;
            weighingRecord.Date = date;
            weighingRecord.Weight = weight;
            weighingRecord.TonsPerHour = tonsPerHour;
            weighingRecord.ProductId = productId;
            weighingRecord.PlantId = plantId;
            weighingRecord.FileId = fileId;
            return weighingRecord;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private global::System.Decimal _Weight;
        partial void OnWeightChanging(global::System.Decimal value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TonsPerHour
        {
            get
            {
                return _TonsPerHour;
            }
            set
            {
                OnTonsPerHourChanging(value);
                ReportPropertyChanging("TonsPerHour");
                _TonsPerHour = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TonsPerHour");
                OnTonsPerHourChanged();
            }
        }
        private global::System.Decimal _TonsPerHour;
        partial void OnTonsPerHourChanging(global::System.Decimal value);
        partial void OnTonsPerHourChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlantId
        {
            get
            {
                return _PlantId;
            }
            set
            {
                OnPlantIdChanging(value);
                ReportPropertyChanging("PlantId");
                _PlantId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlantId");
                OnPlantIdChanged();
            }
        }
        private global::System.Int32 _PlantId;
        partial void OnPlantIdChanging(global::System.Int32 value);
        partial void OnPlantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileId
        {
            get
            {
                return _FileId;
            }
            set
            {
                OnFileIdChanging(value);
                ReportPropertyChanging("FileId");
                _FileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileId");
                OnFileIdChanged();
            }
        }
        private global::System.Int32 _FileId;
        partial void OnFileIdChanging(global::System.Int32 value);
        partial void OnFileIdChanged();

        #endregion

    
    }

    #endregion

    
}
